dev setup
- install brew
- brew install npm
- brew install 

- npm install
- gem install rubyzip
- gem install zip

___________________________
___________________________

#If you need to have this software first in your PATH instead consider running: 
#echo 'export PATH="/usr/local/opt/node@10/bin:$PATH"' >> /Users/tzekangng/.bash_profile

make test
make release (increase version in package/manifest.json)

upload zip or packages folder


src/background/main.js
src/background/Settings.js -> SettingsSchema


SettingsSchema:

{
    focus: {
        duration: 25,
        timerSound: null,
        countdown: {
            host: null,
            autoclose: true,
            resolution: [500, 500]
        },
        notifications: {
            desktop: true,
            tab: true,
            sound: null
        }
    },
    shortBreak: {
        duration: 5,
        timerSound: null,
        countdown: {
            host: null,
            autoclose: true,
            resolution: [500, 500]
        },
        notifications: {
            desktop: true,
            tab: true,
            sound: null
        }
    },
    longBreak: {
        duration: 15,
        interval: 4,
        timerSound: null,
        countdown: {
            host: null,
            autoclose: true,
            resolution: [500, 500]
        },
        notifications: {
            desktop: true,
            tab: true,
            sound: null
        }
    },
    autostart: {
        time: null,
    },
    version: this.version
}

class HistorySchema
{
  get version() {
    return 1;
  }

  get default() {
    return {
      pomodoros: [],
      durations: [],
      timezones: [],
      version: this.version
    };
  }
}



Design:

Introduce the concepts of saving tabs during a pomodoro:
Steps:
1. Record whenever a new tab is opened or closed
2. Naming of each pomodoro - creation of context/task
3. Save all tabs during the end of each pomodoro
4. Start all tabs during the start of a new pomodoro (for that particular context)
5. Have multiple contexts/tasks, and able to select/link each pomodoro to each

6. API - Rest Client calling server API
- Create Account
- Sync data
- 

TODO:
0. brute force calling of login api
1. reskin UI
2. API Layer -> redux pattern/store
3. replace chrome store layer with API layer
4. syncing local and remote data



Schema
{
    context: {
        number: int,
        description: string,
        tabs: []
    }

}

Code:
where chrome tabs is referenced
- Chrome.js - layer that interacts with chrome tab object/api
- Expiration.js - during expiration, chrome tab will pop up displaying expiration text
- SingletonPage.js -

ExpirationPage -> SingletonPage

Observers.OnExpire
- new Notification()
- await ExpirationPage.show();



Resources:
- https://codemyui.com/switch-login-signup/
- https://codepen.io/Anna_Batura/pen/QEAqyE